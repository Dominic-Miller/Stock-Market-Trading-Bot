Progress Report
- Increment 1 -

1) Project Title and Description
- Stock Market Trading Bot
- The idea behind this project is to develop a web application where users can go in and create their 
  own portfolio of stocks from a handful of available options to be traded by a ML bot. The bot will 
  track 1 minute tickers of the stock data and day trade based on the assumption a stock will always 
  fall back to its mean price (if a stock deviates too much from its mean buy/sell that stock). Run a 
  simulation on this data and portfolio contents over the previous year and see what the earnings would 
  have looked like.

2) Accomplishments and overall project status during this increment
- 1. Real-Time Market Data: Real-time market data was found and a python program was created which allows
  a user to implement the ticker for the stock they are interested in along with the start and end date 
  ranges. This function returns all of the data for that stock with each minute ticker within the date
  range. This is fully implemented 100% how I wanted it in our initial scope. I will be able to use this
  to automatically save CSVs for a variety of differnt stocks and allow our trading bot amazing data to be 
  trained on.
- 2. GitHub: During this increment, the bulk of my time was spent planning and developing our GitHub so I
  am prepared for the future increments. I have a bulk of issues in the backlog which allows a good framework
  to develop in increments 2 & 3. This is how I initially planned our project to go and I believe this is as 
  functional as it needs to be for the future of our project.

3) Challenges, changes in the plan and scope of the project and things that went wrong during this increment
- 1. Finding Data: As displayed through the commits metadata, finding data took the bulk of this 
  increment for the backend. I began with yahoo finance data but quickly realized this would not be
  good enough since so many minute tickers were missing. I found a new API called tiingo which many
  hedge funds use and developed a program to pull any trading data I wanted for any given range. This
  is great, however since model training takes so long I now realize I will likely not be able to have
  as large of a catalog of options as I once hoped. 
- 2. Programming Languages: A lot of thought went into how I will connect the backend with the frontend. 
  I originally hoped to implement C++ into our project since this is the langauge we are all taught at FSU,
  however I now realize that this will be much more difficult and I will stick to Python for the backend  
  since it connects much nicer with the frontend.

4) Plans for the next increment
- In the next increment, I plan on fully implementing the backend for this project. This will include 
  writing all the code needed to train our ML bots and actually training our models so that when I
  finish the web application, I can simply connect the backend to this application and the simulations
  will run based on user input.
